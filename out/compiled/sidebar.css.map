{
  "version": 3,
  "file": "sidebar.css",
  "sources": [
    "MemeContainer.svelte",
    "Sidebar.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  export let data;\r\n</script>\r\n\r\n<section>\r\n  <p>Posted by: <span><strong>u/{data.author}</strong></span></p>\r\n  <p>Upvotes: <span><strong>{data.ups}</strong></span></p>\r\n  <h3 class=\"img-title\">{data.title}</h3>\r\n</section>\r\n<div class=\"img-container\">\r\n  <a href={data.postLink}>\r\n    <img src={data.url} alt=\"Meme\" />\r\n  </a>\r\n</div>\r\n\r\n<style>\r\n  p {\r\n    margin: 10px;\r\n  }\r\n\r\n  h3 {\r\n    font-family: Gelasio;\r\n    margin: 10px;\r\n    text-align: center;\r\n  }\r\n</style>",
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { onMount } from \"svelte\";\r\nimport MemeContainer from \"./MemeContainer.svelte\";\r\nlet visitedMemes = [];\r\nclass Meme {\r\n    constructor(url, title, author, ups, postLink) {\r\n        this.url = url;\r\n        this.title = title;\r\n        this.author = author;\r\n        this.ups = ups;\r\n        this.postLink = postLink;\r\n    }\r\n}\r\nclass MemeService {\r\n    getMemes() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const response = yield fetch(\"https://meme-api.herokuapp.com/gimme\");\r\n            return yield response.json();\r\n        });\r\n    }\r\n}\r\n// two fns to set and get images from localstorage\r\nconst setImgInStore = (imgData) => {\r\n    localStorage.setItem(\"prevImg\", JSON.stringify(imgData));\r\n};\r\nconst getImgFromStore = () => {\r\n    const prevImg = localStorage.getItem(\"prevImg\");\r\n    if (prevImg)\r\n        return JSON.parse(prevImg);\r\n};\r\nlet apiClient = new MemeService();\r\nconst fetchImage = apiClient.getMemes();\r\nconst handleNextBtnClick = () => {\r\n    visitedMemes.push(currentMeme);\r\n    //2. save that object to the local storage.\r\n    setImgInStore(visitedMemes);\r\n    //3. get the next img\r\n    apiClient.getMemes().then((meme) => {\r\n        console.log(\"next btn is clicked\");\r\n        currentMeme = meme;\r\n    });\r\n};\r\nconst handlePreviousBtnClick = () => {\r\n    // only allow until the stack is available\r\n    const prevImgs = getImgFromStore();\r\n    if (prevImgs.length < 1)\r\n        return;\r\n    console.log(\"prev btn is clicked\");\r\n    // get the first object from array...\r\n    let prevImg = prevImgs.pop();\r\n    // setback the local storage to modified array\r\n    setImgInStore(prevImgs);\r\n    currentMeme = prevImg;\r\n};\r\n$: memeFetch = fetchImage;\r\n$: currentMeme = null;\r\n</script>\r\n\r\n<div class=\"container\">\r\n  {#await memeFetch}\r\n    <p>Getting you top quality Meme!</p>\r\n  {:then data}\r\n      <MemeContainer data={currentMeme ? currentMeme : data} />\r\n  {:catch}\r\n    <p>Something went wrong!</p>\r\n  {/await}\r\n  <div class=\"button-stack\">\r\n    <button class=\"btn previous-btn\" on:click={handlePreviousBtnClick}>\r\n      &xlarr\r\n    </button>\r\n    <button class=\"btn next-btn\" on:click={handleNextBtnClick}>&rarr</button>\r\n  </div>\r\n  <a href=\"https://github.com/version0chiro/VS-Meme-Reddit\">\r\n    <footer>If you like the project please consider ‚≠êstaring the repo!</footer>\r\n  </a>\r\n</div>\r\n\r\n<!-- svelte-ignore missing-declaration -->\r\n<style>\r\n  @font-face {\r\n    font-family: \"Gelasio\";\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    src: local(\"Gelasio Regular\"), local(\"Gelasio-Regular\"),\r\n      url(https://fonts.gstatic.com/s/gelasio/v1/cIf9MaFfvUQxTTqS9C6hYQ.woff2)\r\n        format(\"woff2\");\r\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,\r\n      U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212,\r\n      U+2215, U+FEFF, U+FFFD;\r\n  }\r\n  .container {\r\n    position: relative;\r\n    height: 100vh;\r\n  }\r\n  footer {\r\n    position: absolute;\r\n    bottom: 1vh;\r\n    padding: var(--input-padding-vertical) var(--input-padding-horizontal);\r\n    text-align: center;\r\n    margin-top: 10px;\r\n    width: 100%;\r\n    border: 3px solid #c15111;\r\n  }\r\n  img {\r\n    border: 1px solid;\r\n    border-color: aquamarine;\r\n    width: 200%;\r\n    max-height: 75vh;\r\n  }\r\n  .button-stack {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    position: absolute;\r\n    bottom: 12vh;\r\n    width: 100%;\r\n  }\r\n  .btn {\r\n    flex: 1;\r\n    border: none;\r\n    padding: var(--input-padding-vertical) var(--input-padding-horizontal);\r\n    width: 100%;\r\n    margin: 5px;\r\n    text-align: center;\r\n    color: var(--vscode-button-foreground);\r\n    background: var(--vscode-button-background);\r\n    border-radius: 15px;\r\n    outline: none;\r\n  }\r\n\r\n  .btn:hover {\r\n    background-color: orange;\r\n  }\r\n  .btn:focus {\r\n    background-color: rgb(255, 106, 0);\r\n  }\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "AAgBE,CAAC,eAAC,CAAC,AACD,MAAM,CAAE,IAAI,AACd,CAAC,AAED,EAAE,eAAC,CAAC,AACF,WAAW,CAAE,OAAO,CACpB,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MAAM,AACpB,CAAC;AC+DD,UAAU,AAAC,CAAC,AACV,WAAW,CAAE,SAAS,CACtB,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,GAAG,CAChB,GAAG,CAAE,MAAM,iBAAiB,CAAC,CAAC,CAAC,MAAM,iBAAiB,CAAC,CAAC;MACtD,IAAI,mEAAmE,CAAC;QACtE,OAAO,OAAO,CAAC,CACnB,aAAa,CAAE,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;MAC3E,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;MACpE,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,AAC1B,CAAC,AACD,UAAU,cAAC,CAAC,AACV,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,KAAK,AACf,CAAC,AACD,MAAM,cAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,IAAI,wBAAwB,CAAC,CAAC,IAAI,0BAA0B,CAAC,CACtE,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAC3B,CAAC,AAOD,aAAa,cAAC,CAAC,AACb,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,eAAe,CAAE,MAAM,CACvB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,AACb,CAAC,AACD,IAAI,cAAC,CAAC,AACJ,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,wBAAwB,CAAC,CAAC,IAAI,0BAA0B,CAAC,CACtE,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CACX,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,IAAI,0BAA0B,CAAC,CACtC,UAAU,CAAE,IAAI,0BAA0B,CAAC,CAC3C,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,AACf,CAAC,AAED,kBAAI,MAAM,AAAC,CAAC,AACV,gBAAgB,CAAE,MAAM,AAC1B,CAAC,AACD,kBAAI,MAAM,AAAC,CAAC,AACV,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,AACpC,CAAC"
}